name: Build (MacOS, Linux, Windows)

on: [push]

# Please check if all components are available before updating the rust toolchain version.
# https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu.html

jobs:


  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2019-11-04
          override: true

      - name: Install wasm-pack (MacOS)
        # We could use cargo install wasm-pack, but that takes 3.5 minutes compared to few seconds.
        env:
          WASMPACKURL: https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1
          WASMPACKDIR: wasm-pack-v0.9.1-x86_64-apple-darwin
        run: |
          curl -L "$WASMPACKURL/$WASMPACKDIR.tar.gz" | tar -xz -C .
          mv $WASMPACKDIR/wasm-pack ~/.cargo/bin
          rm -r $WASMPACKDIR
        shell: bash
        if: matrix.os == 'macOS-latest'

      - name: Install wasm-pack (Linux)
        # We could use cargo install wasm-pack, but that takes 3.5 minutes compared to few seconds.
        env:
          WASMPACKURL: https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1
          WASMPACKDIR: wasm-pack-v0.9.1-x86_64-unknown-linux-musl
        run: |
          curl -L "$WASMPACKURL/$WASMPACKDIR.tar.gz" | tar -xz -C .
          mv $WASMPACKDIR/wasm-pack ~/.cargo/bin
          rm -r $WASMPACKDIR
        shell: bash
        if: matrix.os == 'ubuntu-latest'

      - name: Install wasm-pack (Windows)
        # We could use cargo install wasm-pack, but that takes 3.5 minutes compared to few seconds.
        env:
          WASMPACKURL: https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1
          WASMPACKDIR: wasm-pack-v0.9.1-x86_64-pc-windows-msvc
        run: |
          curl -L "$WASMPACKURL/$WASMPACKDIR.tar.gz" | tar -xz -C .
          mv $WASMPACKDIR/wasm-pack ~/.cargo/bin
          rm -r $WASMPACKDIR
        shell: bash
        if: matrix.os == 'windows-latest'

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.15.0'

      - name: Build (Ubuntu)
        run: node ./run dist --skip-version-validation --target linux
        if: matrix.os == 'ubuntu-latest'

      - name: Build (Windows)
        run: node ./run dist --skip-version-validation --target win
        if: matrix.os == 'windows-latest'

      - name: Build (MacOs)
        run: node ./run dist --skip-version-validation --target macos
        if: matrix.os == 'macos-latest'

      - name: Upload Artifacts (Ubuntu, AppImage)
        uses: actions/upload-artifact@v1
        with:
          name: Enso IDE (Linux, AppImage)
          path: dist/client/Enso-2.0.0-alpha.0.AppImage
        if: matrix.os == 'ubuntu-latest'

      - name: Upload Artifacts (Ubuntu, not packed)
        uses: actions/upload-artifact@v1
        with:
          name: Enso IDE (Linux, not packed)
          path: dist/client/linux-unpacked
        if: matrix.os == 'ubuntu-latest'

      - name: Upload Artifacts (Windows, Installer)
        uses: actions/upload-artifact@v1
        if: matrix.os == 'windows-latest'
        with:
          name: Enso IDE (Windows, installer)
          path: dist/client/Enso Setup 2.0.0-alpha.0.exe

      - name: Upload Artifacts (Windows, not packed)
        uses: actions/upload-artifact@v1
        if: matrix.os == 'windows-latest'
        with:
          name: Enso IDE (Windows, not packed)
          path: dist/client/win-unpacked

      - name: Upload Artifacts (macOS, dmg)
        uses: actions/upload-artifact@v1
        if: matrix.os == 'macos-latest'
        with:
          name: Enso IDE (macOS, dmg)
          path: dist/client/Enso-2.0.0-alpha.0.dmg

      - name: Upload Artifacts (macOS, app)
        uses: actions/upload-artifact@v1
        if: matrix.os == 'macos-latest'
        with:
          name: Enso IDE (macOS, app)
          path: dist/client/mac/Enso.app
